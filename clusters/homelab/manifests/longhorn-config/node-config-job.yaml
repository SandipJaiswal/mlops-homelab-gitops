apiVersion: batch/v1
kind: Job
metadata:
  name: longhorn-node-config
  namespace: longhorn-system
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      restartPolicy: OnFailure
      serviceAccountName: longhorn-service-account
      nodeSelector:
        kubernetes.io/hostname: t495
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      containers:
      - name: node-config
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Configuring Longhorn node t495..."
          
          # Wait for Longhorn manager to be ready
          until kubectl get pods -n longhorn-system | grep longhorn-manager | grep -q Running; do
            echo "Waiting for Longhorn manager..."
            sleep 10
          done
          
          # Wait a bit more for API to be ready
          sleep 30
          
          # Label the node for Longhorn
          kubectl label nodes t495 node.longhorn.io/create-default-disk=true --overwrite || true
          
          # Create or update the Longhorn node resource
          kubectl apply -f - <<NODE_EOF
          apiVersion: longhorn.io/v1beta2
          kind: Node
          metadata:
            name: t495
            namespace: longhorn-system
          spec:
            allowScheduling: true
            evictionRequested: false
            disks:
              default-disk:
                allowScheduling: true
                evictionRequested: false
                path: /var/lib/longhorn
                storageReserved: 21474836480
                tags: []
            tags: []
          NODE_EOF
          
          echo "✓ Longhorn node t495 configured"
          
          # Wait for node to be recognized
          sleep 30
          
          # Restart longhorn manager to pick up changes
          kubectl rollout restart daemonset/longhorn-manager -n longhorn-system
          
          echo "✓ Longhorn manager restarted"
          
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
