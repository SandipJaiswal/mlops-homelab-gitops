# Path: mlops-homelab-gitops/infrastructure/longhorn/post-install/node-config-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: longhorn-node-config
  namespace: longhorn-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: longhorn-node-config
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "patch", "update"]
- apiGroups: ["longhorn.io"]
  resources: ["nodes"]
  verbs: ["get", "list", "create", "update", "patch"]
- apiGroups: ["apps"]
  resources: ["daemonsets"]
  verbs: ["get", "list"]
- apiGroups: ["apps"]
  resources: ["daemonsets/status"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: longhorn-node-config
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: longhorn-node-config
subjects:
- kind: ServiceAccount
  name: longhorn-node-config
  namespace: longhorn-system
---
apiVersion: batch/v1
kind: Job
metadata:
  name: longhorn-node-config
  namespace: longhorn-system
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      serviceAccountName: longhorn-node-config
      restartPolicy: OnFailure
      nodeSelector:
        kubernetes.io/hostname: t495
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      containers:
      - name: config
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Configuring Longhorn node..."
          
          # Wait for Longhorn to be ready
          until kubectl get pods -n longhorn-system -l app=longhorn-manager --field-selector=status.phase=Running | grep -q longhorn-manager; do
            echo "Waiting for Longhorn manager..."
            sleep 10
          done
          
          # Label the node
          kubectl label nodes t495 node.longhorn.io/create-default-disk=true --overwrite || true
          
          # Configure the node in Longhorn
          cat <<NODECONFIG | kubectl apply -f -
          apiVersion: longhorn.io/v1beta2
          kind: Node
          metadata:
            name: t495
            namespace: longhorn-system
          spec:
            allowScheduling: true
            evictionRequested: false
            disks:
              default-disk:
                allowScheduling: true
                evictionRequested: false
                path: /var/lib/longhorn
                storageReserved: 21474836480
                tags: []
            tags: []
          NODECONFIG
          
          echo "âœ“ Longhorn node configured"
