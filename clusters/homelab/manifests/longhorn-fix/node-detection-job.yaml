apiVersion: batch/v1
kind: Job
metadata:
  name: longhorn-node-detection
  namespace: longhorn-system
spec:
  template:
    spec:
      restartPolicy: OnFailure
      nodeSelector:
        kubernetes.io/hostname: t495
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      containers:
      - name: node-setup
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Setting up Longhorn node detection..."
          
          # Label the node for Longhorn
          kubectl label nodes t495 node.longhorn.io/create-default-disk=true --overwrite
          
          # Create the Longhorn node resource manually
          cat <<NODE_EOF | kubectl apply -f -
          apiVersion: longhorn.io/v1beta2
          kind: Node
          metadata:
            name: t495
            namespace: longhorn-system
          spec:
            allowScheduling: true
            evictionRequested: false
            disks:
              default-disk:
                allowScheduling: true
                evictionRequested: false
                path: /var/lib/longhorn
                storageReserved: 21474836480
                tags: []
            tags: []
          NODE_EOF
          
          echo "Longhorn node resource created"
          
          # Wait for node to be recognized
          sleep 30
          
          # Restart longhorn manager to pick up the node
          kubectl rollout restart daemonset/longhorn-manager -n longhorn-system
          
          echo "Waiting for Longhorn manager restart..."
          kubectl rollout status daemonset/longhorn-manager -n longhorn-system --timeout=300s
          
          echo "âœ“ Longhorn node setup completed"
          
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      serviceAccountName: longhorn-node-setup
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: longhorn-node-setup
  namespace: longhorn-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: longhorn-node-setup
rules:
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["get", "list", "patch", "update"]
- apiGroups: ["longhorn.io"]
  resources: ["nodes"]
  verbs: ["create", "get", "list", "patch", "update"]
- apiGroups: ["apps"]
  resources: ["daemonsets"]
  verbs: ["get", "list", "patch", "update"]
- apiGroups: ["apps"]
  resources: ["daemonsets/status"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: longhorn-node-setup
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: longhorn-node-setup
subjects:
- kind: ServiceAccount
  name: longhorn-node-setup
  namespace: longhorn-system
